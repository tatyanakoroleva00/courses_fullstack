// # Основы работы с пользовательскими функциями в JavaScript

// 1. Сделайте функцию, выводящую на экран ваше имя.

// function showName() {
//     document.write('Tatiana');
// }
// showName();


// 2. Сделайте функцию, выводящую на экран сумму чисел от 1 до 100.

// function sum() {
//     let sum = 0;
//     for (let i = 0; i <= 100; i++) {
//         sum += i;
//     }
//     document.write(sum);
// }
// sum();

// 3. Сделайте функцию, которая параметром принимает число и выводит на экран куб этого числа.

// function showNumber(num) {
//     document.write(Math.pow(num, 3));
// }
// showNumber(2);

// 4. Сделайте функцию, которая параметром принимает число и проверяет, положительное это число или отрицательное. В первом случае пусть функция выводит на экран текст '+++', а во втором '---'.

// function verifyNumber(number) {
//    if (number > 0) document.write('+++');
//    else if (number < 0) document.write('---');
//    else document.write('Neither positive nor negative');
// }
// verifyNumber(0);

// 5. Сделайте функцию, которая параметрами принимает 3 числа и выводит на экран сумму этих чисел.

// function findSum(num1, num2, num3) {
//     document.write(num1 + num2 + num3);
// } 
// findSum(1, 2, 3);

// 6. Сделайте функцию func, которая параметром будет принимать 3 переменных и выводить на экран сумму их значений. Пусть даны 3 переменные с числами:

// let param1 = 1;
// let param2 = 2;
// let param3 = 3;

// С помощью созданной вами функции выведите на экран сумму значений эти переменных.

// let param1 = 1;
// let param2 = 2;
// let param3 = 3;

// function sum(num1, num2, num3) {
//     document.write(num1 + num2 + num3);
// }

// sum(param1, param2, param3);

// 7. Дана функция:

// function func(num = 5) {
// alert(num * num);
// }

// Эта функция вызывается следующим образом:

// func(2);
// func(3);
// func();

// Расскажите, каким будет результат каждого из вызовов функции.

//func(num = 5) - параметр функции по умолчанию, перезаписывается. Ответы: 4, 9, 25. 

// 8. Дана функция:

// function func(num1 = 0, num2 = 0) {
// alert(num1 + num2);
// }

// Эта функция вызывается следующим образом:

// func(2, 3);
// func(3);
// func();

//Ответы: 
// 5
// 3
// 0


// 9. Сделайте функцию, которая параметром принимает число, а возвращает куб этого числа. С помощью этой функции найдите куб числа 3 и запишите его в переменную result.

// function actWise(num) {
// return Math.pow(num, 3);
// }
// let result = actWise(3);

// 10. Сделайте функцию, которая параметром принимает число, а возвращает квадратный корень из этого числа. С помощью этой функции найдите корень числа 3, затем найдите корень числа 4. Просуммируйте полученные результаты и выведите их на экран.

// function actWise(num) {
//     return Math.sqrt(num);
// }
// let res1 = actWise(3);
// let res2 = actWise(4);
// document.write(res1 + res2);

// 11. Пусть у вас есть функция, возвращающая квадратный корень из числа, и функция, округляющая дробь до трех знаков в дробной части:
// С помощью этих функций найдите квадратный корень из числа 2 и округлите его до трех знаков в дробной части.

// function sqrt(num) {
//     return Math.sqrt(num);
// }
// let res = sqrt(2);

// function round(num) {
//     return num.toFixed(3);
// }
// let finalRes = round(res);


// 12. Пусть у вас есть функция, возвращающая квадратный корень из числа, и функция, возвращающая сумму трех чисел:
// С помощью этих функций найдите сумму корней чисел 2, 3 и 4 и запишите ее в переменную result.

// function sqrt(num) {
// return Math.sqrt(num);
// }
// let res1 = sqrt(2);
// let res2 = sqrt(3);
// let res3 = sqrt(4);

// function sum(num1, num2, num3) {
// return num1 + num2 + num3;
// }
// let result = sum(res1, res2, res3);

// 13. Пусть у вас есть функция, округляющая дробь до трех знаков в дробной части:

// С помощью этой функции модифицируйте предыдущую задачу так, чтобы в переменную result записывалась дробь, округленная до 3-х знаков в дробной части.


// function sqrt(num) {
//     return Math.sqrt(num);
//     }
//     let res1 = sqrt(2);
//     let res2 = sqrt(3);
//     let res3 = sqrt(4);
    
//     function sum(num1, num2, num3) {
//     return num1 + num2 + num3;
//     }
//     let middleResult = sum(res1, res2, res3);

// function round(num) {
//     return num.toFixed(3);
//     }
// let result = round(middleResult);
// document.write(result);
    

// 14. Что выведется на экран в результате выполнения следующего кода: Объясните почему.

// function func(num) {
// return num;

// let result = num * num;
// return result;
// }

// alert( func(3) );

//Все очень просто. Выведется 3. Потому что все, что стоит после первого return уже не считается. 

// 15. Что выведет каждый из алертов в результате выполнения следующего кода:Объясните почему.

// function func(num) {
//     if (num <= 0) {
// return Math.abs(num);
//     } else {
// return num * num;
// }
// }

// alert( func(10) );
// alert( func(-5) );

// Ответ: 
// 1 - 100; - Выполняется второе условие, т.к. больше 0. 
// 2 - 5 - Это модуль числа. Выполняется первое условие с if


//В лабораторке повтор 15 и 16 номера. 

// 17. Что выведется на экран в результате выполнения следующего кода: Объясните почему. Что хотел сделать автор данного кода? Исправьте ошибку автора.

// function func(num) {
//     let sum = 0;
//     for (let i = 1; i <= num; i++) {
//         sum += i;
//     }
//     return sum;
// }
// alert(func(5));

//Здесь самое главное - правильно поставить return. Вне цикла, чтобы вывести искомую сумма ВСЕХ чисел. 

// 18*. Напишите функцию, которая параметром будет принимать число и делить его на 2 столько раз, пока результат не станет меньше 10. Пусть функция возвращает количество итераций, которое потребовалось для достижения результата.

// function findResult(num) {
//     let count = 0;
//     for (let i = 0; num > 10; i++) {
//         num /= 2;
//         count++;
//     }
//     return count;
// }
// console.log(findResult(100));


// 19*. Сделайте функцию, которая параметром будет принимать массив с числами, и проверять, что все элементы в этом массиве являются четными числами.

// function findResult(arr) {
//     for (let elem of arr) {
//         if (elem % 2 != 0) {
//             return 'В массиве есть нечетные числа';
//         } 
//     }
//     return 'В массиве все четные числа';
// }
// console.log(findResult([8, 2, 4, 4, 6]));

// 20*. Сделайте функцию, которая параметром будет принимать число и проверять, что все цифры это числа являются нечетными.

// function checkNumbers(num) {
//     let str = String(num);
//     for (let i = 0; i < str.length; i++) {
//         if (Number(str[i]) % 2 != 0)
//         return 'Не все цифры числа четные';
//     }
//     return 'Все цифры числа четные';
// } 
// console.log(checkNumbers(463));

// 21*. Сделайте функцию, которая параметром будет принимать массив и проверять, есть ли в этом массиве два одинаковых элемента подряд.

// function x(arr) {
//     for (let i = 1; i < arr.length; i++) {
//         let num1 = arr[i-1];
//         let num2 = arr[i];
//         if (num1 === num2) {
//             return 'В массиве есть одинаковые числа подряд';
//         }
//     }
//     return 'В массиве нет одинаковых чисел подряд';
// }
// console.log(x([1, 9, 8, 8]));
